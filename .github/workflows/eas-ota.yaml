name: OTA

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Agent selection string.'
        required: false
        default: 'ubuntu-latest'
        type: string
      env:
        description: 'Environment'
        required: true
        type: string
      tag:
        description: 'Tag'
        required: true
        type: string
      platform:
        description: 'Platform'
        required: true
        type: string
      ref:
        description: 'Branch'
        required: false
        type: string
    secrets:
      EXPO_TOKEN:
        required: true
      DOPPLER_TOKEN:
        required: true

jobs:
  build:
    name: EAS OTA
    runs-on: ${{ inputs.runs-on }}
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      PLAYER_NPM_GIT_TOKEN: ${{ secrets.PLAYER_NPM_GIT_TOKEN }}
    steps:
      - name: Check environment and set profile variable
        run: |
          if [ "${{ inputs.env }}" = "dev" ]; then
            echo "PROFILE=staging" >> $GITHUB_ENV
          elif [ "${{ inputs.env }}" = "dev_debug" ]; then
            echo "PROFILE=debug" >> $GITHUB_ENV
          else
            echo "PROFILE=production" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml', '.npmrc') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure GitHub Packages auth
        run: |
          echo "@wer1hub:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${PLAYER_NPM_GIT_TOKEN}" >> ~/.npmrc
        env:
          PLAYER_NPM_GIT_TOKEN: ${{ secrets.PLAYER_NPM_GIT_TOKEN }}

      - name: Install dependencies
        run: |
          pnpm install
          pnpm install -g eas-cli
          pnpm install -g dotenv-cli

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: pnpm

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: OTA
        run: |
          doppler run -c ${{ inputs.env }} -- eas update --platform ${{ inputs.platform }} --channel $PROFILE --clear-cache --non-interactive --auto
