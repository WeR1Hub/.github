name: Build and Release Expo App

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Agent selection string.'
        required: false
        default: 'ubuntu-latest'
        type: string
      env:
        description: 'Environment'
        required: true
        type: string
      tag:
        description: 'Tag'
        required: true
        type: string
    secrets:
      EXPO_TOKEN:
        required: true
      DOPPLER_TOKEN:
        required: true

jobs:
  build:
    name: Install and Build
    runs-on: ${{ inputs.runs-on }}
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
    steps:
      - name: Check environment and set profile variable
        run: |
          if [ "${{ inputs.env }}" = "dev" ]; then
            echo "PROFILE=staging" >> $GITHUB_ENV
          else
            echo "PROFILE=production" >> $GITHUB_ENV
          fi

      - name: Test PROFILE / Tag variables
        run: |
          echo "Profile is set to $PROFILE"
          echo "Tag is set to ${{ inputs.tag }}"

      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install
          pnpm install -g eas-cli

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: pnpm

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v2

      - name: Configure Build Version
        run: |
          VERSION=${{ inputs.tag }}
          sed -i -e "s/version:.*/version: '$VERSION',/" ./app.config.ts
          sed -i -E "s/(.*versionCode:.*)([0-9]*[0-9])/&@/g;:a {s/0@/1/g;s/1@/2/g;s/2@/3/g;s/3@/4/g;s/4@/5/g;s/5@/6/g;s/6@/7/g;s/7@/8/g;s/8@/9/g;s/9@/@0/g;t a}" ./app.config.ts

      - name: Build Project with EAS
        run: doppler run -c ${{ inputs.env }} -- eas build --profile $PROFILE --platform all --no-wait --non-interactive #--auto-submit

      - name: Commit updated image version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "support@wer1.ai"
          git add ./app.config.ts
          git commit -m "#autocommit: Update image version to ${{ inputs.tag }}"
          git push

      # - name: Submit to Stores (Optional)
      #   run: eas submit --platform all --non-interactive
      # if: github.ref == 'refs/heads/main'
