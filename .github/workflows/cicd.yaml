name: CICD

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Agent selection string.'
        required: false
        default: 'ubuntu-latest'
        type: string
      aws-assume-role-arn:
        description: 'The AWS Role ARN to assume for AWS operations.'
        required: true
        type: string
      aws-assume-role-region:
        description: 'The AWS region to assume IAM in for AWS operations.'
        required: true
        type: string
      aws-ecr-repository-uri:
        description: 'The AWS ECR repository URI.'
        required: true
        type: string
      dockerfile-path:
        description: 'The Dockerfile path.'
        required: false
        default: 'Dockerfile'
        type: string
      tag:
        description: 'Semver Tag'
        required: true
        type: string

jobs:
  deploy:
    name: 'Push to ECR'
    runs-on: ${{ inputs.runs-on }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-assume-role-arn }}
          aws-region: ${{ inputs.aws-assume-role-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ inputs.aws-ecr-repository-uri }}
      #     tags: |
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: ${{ inputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ inputs.dockerfile-path }}
